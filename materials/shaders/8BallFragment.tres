[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://dj6mtawnroxho"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_sp1cy"]
function = 31

[sub_resource type="VisualShaderNodeIntConstant" id="VisualShaderNodeIntConstant_sp1cy"]
constant = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sp1cy"]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1tv0v"]
default_input_values = [0, 0.0, 1, 10.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ahc26"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 4

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_13ikf"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_13ikf"]
default_input_values = [0, 0.0, 1, 10.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wrs8y"]
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nexh8"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1tv0v"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ahc26"]
default_input_values = [0, 0.2, 1, 0.5]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_13ikf"]
parameter_name = "Color"
default_value_enabled = true
default_value = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_sp1cy"]
parameter_name = "ShellRange"
default_value_enabled = true
default_value = 0.2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 Color : source_color = vec4(0.000000, 0.000000, 0.000000, 1.000000);
uniform float ShellRange = 0.20000000298023;



void fragment() {
// ColorParameter:8
	vec4 n_out8p0 = Color;


// FloatParameter:9
	float n_out9p0 = ShellRange;


// Input:4
	vec2 n_out4p0 = UV;
	float n_out4p1 = n_out4p0.r;
	float n_out4p2 = n_out4p0.g;


// Step:7
	float n_out7p0 = step(n_out9p0, n_out4p2);


// FloatFunc:10
	float n_out10p0 = 1.0 - n_out7p0;


// FloatOp:12
	float n_in12p1 = 0.00000;
	float n_out12p0 = n_out10p0 - n_in12p1;


// IntConstant:11
	int n_out11p0 = 1;


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out12p0;
	ALPHA_SCISSOR_THRESHOLD = float(n_out11p0);


}
"
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_1tv0v")
nodes/fragment/4/position = Vector2(-1460, 440)
nodes/fragment/7/node = SubResource("VisualShaderNodeStep_ahc26")
nodes/fragment/7/position = Vector2(-640, 300)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_13ikf")
nodes/fragment/8/position = Vector2(-480, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_sp1cy")
nodes/fragment/9/position = Vector2(-1060, 200)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatFunc_sp1cy")
nodes/fragment/10/position = Vector2(-440, 320)
nodes/fragment/11/node = SubResource("VisualShaderNodeIntConstant_sp1cy")
nodes/fragment/11/position = Vector2(100, 820)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_sp1cy")
nodes/fragment/12/position = Vector2(0, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_1tv0v")
nodes/fragment/16/position = Vector2(-700, 520)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_ahc26")
nodes/fragment/17/position = Vector2(-480, 580)
nodes/fragment/18/node = SubResource("VisualShaderNodeClamp_13ikf")
nodes/fragment/18/position = Vector2(-280, 600)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_13ikf")
nodes/fragment/19/position = Vector2(-720, 840)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_wrs8y")
nodes/fragment/20/position = Vector2(-900, 840)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatOp_nexh8")
nodes/fragment/21/position = Vector2(-880, 520)
nodes/fragment/connections = PackedInt32Array(7, 0, 10, 0, 4, 2, 7, 1, 9, 0, 7, 0, 11, 0, 0, 19, 10, 0, 12, 0, 12, 0, 0, 1, 16, 0, 17, 0, 17, 0, 18, 0, 20, 0, 19, 0, 21, 0, 16, 0, 4, 2, 20, 0, 4, 1, 21, 0, 19, 0, 17, 1, 8, 0, 0, 0)
