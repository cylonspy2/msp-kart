[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://oit4rvv0p44l"]

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_tfiaa"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tfiaa"]
parameter_name = "alphaCutoff"
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tfiaa"]
parameter_name = "glow"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_6mfv5"]
parameter_name = "albedo"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform vec4 glow : source_color;
uniform float alphaCutoff = 0.5;



void fragment() {
// ColorParameter:5
	vec4 n_out5p0 = albedo;


// Fresnel:2
	float n_in2p3 = 1.00000;
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in2p3);


// ColorParameter:4
	vec4 n_out4p0 = glow;


// FloatParameter:3
	float n_out3p0 = alphaCutoff;


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out2p0;
	EMISSION = vec3(n_out4p0.xyz);
	ALPHA_SCISSOR_THRESHOLD = n_out3p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeFresnel_tfiaa")
nodes/fragment/2/position = Vector2(-180, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_tfiaa")
nodes/fragment/3/position = Vector2(-40, 820)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_tfiaa")
nodes/fragment/4/position = Vector2(-200, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_6mfv5")
nodes/fragment/5/position = Vector2(-180, -100)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 0, 19, 4, 0, 0, 5, 5, 0, 0, 0)
